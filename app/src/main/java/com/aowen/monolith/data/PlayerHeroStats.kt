package com.aowen.monolith.data

import java.text.DecimalFormat
import java.text.DecimalFormatSymbols
import java.util.Locale

data class PlayerHeroStats(
    val heroId: Int = 0,
    val displayName: String = "",
    val matchCount: Int = 0,
    val winRate: Double? = 0.0,
    val csMin: Double? = 0.0,
    val goldMin: Double? = 0.0,
    val largestKillingSpree: Int? = 0,
    val largestMultiKill: Int? = 0,
    val largestCriticalStrike: Int? = 0,
    val totalPerformanceScore: Double? = 0.0,
    val avgPerformanceScore: Double? = 0.0,
    val maxPerformanceScore: Double? = 0.0,
    val kills: Int? = 0,
    val avgKills: Int? = 0,
    val maxKills: Int? = 0,
    val deaths: Int? = 0,
    val avgDeaths: Int? = 0,
    val maxDeaths: Int? = 0,
    val assists: Int? = 0,
    val avgAssists: Int? = 0,
    val maxAssists: Int? = 0,
    val avgKdar: Double? = 0.0,
    val maxKdar: Double? = 0.0,
    val minionsKilled: Int? = 0,
    val avgMinionsKilled: Int? = 0,
    val maxMinionsKilled: Int? = 0,
    val goldEarned: Int? = 0,
    val avgGoldEarned: Int? = 0,
    val maxGoldEarned: Int? = 0,
    val totalHealingDone: Int? = 0,
    val avgHealingDone: Int? = 0,
    val maxHealingDone: Int? = 0,
    val totalDamageMitigated: Int? = 0,
    val avgDamageMitigated: Int? = 0,
    val maxDamageMitigated: Int? = 0,
    val totalDamageDealtToHeroes: Int? = 0,
    val avgDamageDealtToHeroes: Int? = 0,
    val maxDamageDealtToHeroes: Int? = 0,
    val totalDamageTakenFromHeroes: Int? = 0,
    val avgDamageTakenFromHeroes: Int? = 0,
    val maxDamageTakenFromHeroes: Int? = 0,
    val totalDamageDealtToStructures: Int? = 0,
    val avgDamageDealtToStructures: Int? = 0,
    val maxDamageDealtToStructures: Int? = 0,
    val totalDamageDealtToObjectives: Int? = 0,
    val avgDamageDealtToObjectives: Int? = 0,
    val maxDamageDealtToObjectives: Int? = 0,
    val wardsPlaced: Int? = 0,
    val avgWardsPlaced: Int? = 0,
    val maxWardsPlaced: Int? = 0,
    val wardsDestroyed: Int? = 0,
    val avgWardsDestroyed: Int? = 0,
    val maxWardsDestroyed: Int? = 0
)

fun PlayerHeroStatsDto.create(): PlayerHeroStats {

    val symbols = DecimalFormatSymbols(Locale.US)
    val df = DecimalFormat("#.##", symbols)


    return PlayerHeroStats(
        heroId.toInt(),
        displayName,
        matchCount,
        winRate = df.format(winRate?.let { it * 100 } ?: 0).toDouble(),
        csMin,
        goldMin,
        largestKillingSpree,
        largestMultiKill,
        largestCriticalStrike,
        totalPerformanceScore,
        avgPerformanceScore,
        maxPerformanceScore,
        kills,
        avgKills,
        maxKills,
        deaths,
        avgDeaths,
        maxDeaths,
        assists,
        avgAssists,
        maxAssists,
        avgKdar,
        maxKdar,
        minionsKilled,
        avgMinionsKilled,
        maxMinionsKilled,
        goldEarned,
        avgGoldEarned,
        maxGoldEarned,
        totalHealingDone,
        avgHealingDone,
        maxHealingDone,
        totalDamageMitigated,
        avgDamageMitigated,
        maxDamageMitigated,
        totalDamageDealtToHeroes,
        avgDamageDealtToHeroes,
        maxDamageDealtToHeroes,
        totalDamageTakenFromHeroes,
        avgDamageTakenFromHeroes,
        maxDamageTakenFromHeroes,
        totalDamageDealtToStructures,
        avgDamageDealtToStructures,
        maxDamageDealtToStructures,
        totalDamageDealtToObjectives,
        avgDamageDealtToObjectives,
        maxDamageDealtToObjectives,
        wardsPlaced,
        avgWardsPlaced,
        maxWardsPlaced,
        wardsDestroyed,
        avgWardsDestroyed,
        maxWardsDestroyed
    )
}
