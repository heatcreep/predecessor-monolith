plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace 'com.aowen.monolith'
    compileSdk 34

    defaultConfig {
        applicationId "com.aowen.monolith"
        minSdk 24
        targetSdk 34
        // 1 was the last versionCode used on Play Store before implementing CI with github actions
        //versionCode is now auto-incremented by using github actions build number plus the original value
        versionCode Integer.valueOf(System.getenv("VERSION_CODE") ?: 1) + 1
        versionName System.getenv("VERSION_NAME") ?: "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "SUPABASE_URL", "${getEnvironmentVariable("SUPABASE_URL")}")
        buildConfigField("String", "SUPABASE_API_KEY", "${getEnvironmentVariable("SUPABASE_KEY")}")
    }
    signingConfigs {
        release {
            storeFile System.getenv("KEYSTORE_FILE")
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }
    buildTypes {

        firebaseDistribution {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

def getLocalProperty(String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty(key)
}

def getEnvironmentVariable(String key) {
    Boolean isCi = System.getenv("CI")?.toBoolean() ?: false
    if (isCi) {
        return System.getenv(key)
    } else {
        return getLocalProperty(key)
    }
}

dependencies {
    coreLibraryDesugaring libs.desugar.jdk.libs
    implementation platform(libs.firebase.bom)
    implementation platform(libs.kotlin.bom)
    compileOnly(libs.android.gradle.plugin)
    compileOnly(libs.kotlin.gradle.plugin)
    compileOnly(libs.ksp.gradle)
    implementation libs.androidx.core.ktx
    implementation libs.firebase.crashlytics
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.compose.material3
    implementation libs.androidx.compose.material.icons.extended
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.kotlinx.immutable.collections

    // Firebase API
    implementation libs.firebase.app.distribution.api
    firebaseDistributionImplementation libs.firebase.app.distribution

    // Compose Navigation
    implementation libs.androidx.compose.navigation

    // Accompanist - Pager
    implementation libs.accompanist.pager
    implementation libs.accompanist.page.indictators

    // Accompanist - Permissions
    firebaseDistributionImplementation libs.accompanist.permissions

    // Hilt
    implementation libs.hilt.android
    kapt libs.hilt.android.compiler
    implementation libs.androidx.hilt.navigation.compose

    // RichText
    implementation libs.meetup.markdown

    // Serialization
    implementation libs.kotlinx.serialization
    implementation libs.retrofit.serialization.converter

    // Paging
    implementation libs.androidx.paging.runtime
    implementation libs.androidx.paging.compose

    // Coil
    implementation libs.coil.compose

    // Supabase
    implementation libs.supabase.gotrue
    implementation platform(libs.supabase.bom)
    implementation libs.supabase.postgres
    implementation libs.supabase.functions
    implementation libs.ktor.client.android
    implementation libs.ktor.client.okhttp

    testImplementation libs.junit4
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.androidx.paging.testing
    androidTestImplementation libs.androidx.test.ext
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.compose.ui.test
    debugImplementation libs.androidx.compose.ui.tooling.preview
    debugImplementation libs.androidx.compose.ui.test
}