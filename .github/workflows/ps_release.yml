name: Build & Release APK to PlayStore

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set version variable
        run: |
          VERSION_NAME=$(echo "${{ github.ref_name }}" | egrep -o '[0-9]+\.[0-9]+\.[0-9]+')
          echo "version_name=$VERSION_NAME" >> "$GITHUB_ENV"

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > keystore.jks

      - name: Build & Bundle Release AAB
        env:
          VERSION_CODE: ${{ github.run_number }}
          VERSION_NAME: ${{ env.version_name }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          KEYSTORE_FILE: ${{ github.workspace }}/keystore.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        run: |
          ./gradlew bundleRelease

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_CREDENTIALS }}
          packageName: com.aowen.monolith
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: production

      - name: Create Github Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            app/build/outputs/bundle/release/app-release.aab

      - name: Prepare Discord Notification
        env:
          VERSION_NAME: ${{ env.version_name }}
        run: |
          sed -i "s/\$VERSION_NAME/$VERSION_NAME/g" discord.json

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          OMEDA_DISCORD_WEBHOOK: ${{ secrets.OMEDA_DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data @discord.json $DISCORD_WEBHOOK
          curl -X POST -H 'Content-type: application/json' --data @discord.json $OMEDA_DISCORD_WEBHOOK